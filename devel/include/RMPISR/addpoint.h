// Generated by gencpp from file RMPISR/addpoint.msg
// DO NOT EDIT!


#ifndef RMPISR_MESSAGE_ADDPOINT_H
#define RMPISR_MESSAGE_ADDPOINT_H

#include <ros/service_traits.h>


#include <RMPISR/addpointRequest.h>
#include <RMPISR/addpointResponse.h>


namespace RMPISR
{

struct addpoint
{

typedef addpointRequest Request;
typedef addpointResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct addpoint
} // namespace RMPISR


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::RMPISR::addpoint > {
  static const char* value()
  {
    return "fca49ca1a51aa0c3cdeb5f4e59c200d6";
  }

  static const char* value(const ::RMPISR::addpoint&) { return value(); }
};

template<>
struct DataType< ::RMPISR::addpoint > {
  static const char* value()
  {
    return "RMPISR/addpoint";
  }

  static const char* value(const ::RMPISR::addpoint&) { return value(); }
};


// service_traits::MD5Sum< ::RMPISR::addpointRequest> should match 
// service_traits::MD5Sum< ::RMPISR::addpoint > 
template<>
struct MD5Sum< ::RMPISR::addpointRequest>
{
  static const char* value()
  {
    return MD5Sum< ::RMPISR::addpoint >::value();
  }
  static const char* value(const ::RMPISR::addpointRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::RMPISR::addpointRequest> should match 
// service_traits::DataType< ::RMPISR::addpoint > 
template<>
struct DataType< ::RMPISR::addpointRequest>
{
  static const char* value()
  {
    return DataType< ::RMPISR::addpoint >::value();
  }
  static const char* value(const ::RMPISR::addpointRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::RMPISR::addpointResponse> should match 
// service_traits::MD5Sum< ::RMPISR::addpoint > 
template<>
struct MD5Sum< ::RMPISR::addpointResponse>
{
  static const char* value()
  {
    return MD5Sum< ::RMPISR::addpoint >::value();
  }
  static const char* value(const ::RMPISR::addpointResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::RMPISR::addpointResponse> should match 
// service_traits::DataType< ::RMPISR::addpoint > 
template<>
struct DataType< ::RMPISR::addpointResponse>
{
  static const char* value()
  {
    return DataType< ::RMPISR::addpoint >::value();
  }
  static const char* value(const ::RMPISR::addpointResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RMPISR_MESSAGE_ADDPOINT_H
